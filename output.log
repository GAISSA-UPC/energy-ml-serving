INFO:nncf:NNCF initialized successfully. Supported frameworks detected: torch, onnx, openvino
D:\GAISSA\energy-repo\myenv2\lib\site-packages\pydantic\_internal\_config.py:321: UserWarning: Valid config keys have changed in V2:
* 'schema_extra' has been renamed to 'json_schema_extra'
  warnings.warn(message, UserWarning)
INFO:     Started server process [1772]
INFO:     Waiting for application startup.
INFO:     Application startup complete.
INFO:     Uvicorn running on http://0.0.0.0:8000 (Press CTRL+C to quit)
------------------------modules loaded!------------------------
INFO:     127.0.0.1:33507 - "GET / HTTP/1.1" 200 OK
Input text
def hello_world():
Model: Pythia_410m
Runtime engine: torchscript
INFO:     127.0.0.1:33527 - "POST /huggingface_models/pythia-410m/torchscript HTTP/1.1" 500 Internal Server Error
ERROR:    Exception in ASGI application
Traceback (most recent call last):
  File "D:\GAISSA\energy-repo\myenv2\lib\site-packages\transformers\utils\hub.py", line 389, in cached_file
    resolved_file = hf_hub_download(
  File "D:\GAISSA\energy-repo\myenv2\lib\site-packages\huggingface_hub\utils\_validators.py", line 110, in _inner_fn
    validate_repo_id(arg_value)
  File "D:\GAISSA\energy-repo\myenv2\lib\site-packages\huggingface_hub\utils\_validators.py", line 158, in validate_repo_id
    raise HFValidationError(
huggingface_hub.utils._validators.HFValidationError: Repo id must be in the form 'repo_name' or 'namespace/repo_name': 'models/onnx/pythia-410m'. Use `repo_type` argument if needed.

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "D:\GAISSA\energy-repo\myenv2\lib\site-packages\uvicorn\protocols\http\h11_impl.py", line 408, in run_asgi
    result = await app(  # type: ignore[func-returns-value]
  File "D:\GAISSA\energy-repo\myenv2\lib\site-packages\uvicorn\middleware\proxy_headers.py", line 84, in __call__
    return await self.app(scope, receive, send)
  File "D:\GAISSA\energy-repo\myenv2\lib\site-packages\fastapi\applications.py", line 1054, in __call__
    await super().__call__(scope, receive, send)
  File "D:\GAISSA\energy-repo\myenv2\lib\site-packages\starlette\applications.py", line 123, in __call__
    await self.middleware_stack(scope, receive, send)
  File "D:\GAISSA\energy-repo\myenv2\lib\site-packages\starlette\middleware\errors.py", line 186, in __call__
    raise exc
  File "D:\GAISSA\energy-repo\myenv2\lib\site-packages\starlette\middleware\errors.py", line 164, in __call__
    await self.app(scope, receive, _send)
  File "D:\GAISSA\energy-repo\myenv2\lib\site-packages\starlette\middleware\exceptions.py", line 62, in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
  File "D:\GAISSA\energy-repo\myenv2\lib\site-packages\starlette\_exception_handler.py", line 64, in wrapped_app
    raise exc
  File "D:\GAISSA\energy-repo\myenv2\lib\site-packages\starlette\_exception_handler.py", line 53, in wrapped_app
    await app(scope, receive, sender)
  File "D:\GAISSA\energy-repo\myenv2\lib\site-packages\starlette\routing.py", line 762, in __call__
    await self.middleware_stack(scope, receive, send)
  File "D:\GAISSA\energy-repo\myenv2\lib\site-packages\starlette\routing.py", line 782, in app
    await route.handle(scope, receive, send)
  File "D:\GAISSA\energy-repo\myenv2\lib\site-packages\starlette\routing.py", line 297, in handle
    await self.app(scope, receive, send)
  File "D:\GAISSA\energy-repo\myenv2\lib\site-packages\starlette\routing.py", line 77, in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
  File "D:\GAISSA\energy-repo\myenv2\lib\site-packages\starlette\_exception_handler.py", line 64, in wrapped_app
    raise exc
  File "D:\GAISSA\energy-repo\myenv2\lib\site-packages\starlette\_exception_handler.py", line 53, in wrapped_app
    await app(scope, receive, sender)
  File "D:\GAISSA\energy-repo\myenv2\lib\site-packages\starlette\routing.py", line 72, in app
    response = await func(request)
  File "D:\GAISSA\energy-repo\myenv2\lib\site-packages\fastapi\routing.py", line 299, in app
    raise e
  File "D:\GAISSA\energy-repo\myenv2\lib\site-packages\fastapi\routing.py", line 294, in app
    raw_response = await run_endpoint_function(
  File "D:\GAISSA\energy-repo\myenv2\lib\site-packages\fastapi\routing.py", line 193, in run_endpoint_function
    return await run_in_threadpool(dependant.call, **values)
  File "D:\GAISSA\energy-repo\myenv2\lib\site-packages\starlette\concurrency.py", line 40, in run_in_threadpool
    return await anyio.to_thread.run_sync(func, *args)
  File "D:\GAISSA\energy-repo\myenv2\lib\site-packages\anyio\to_thread.py", line 56, in run_sync
    return await get_async_backend().run_sync_in_worker_thread(
  File "D:\GAISSA\energy-repo\myenv2\lib\site-packages\anyio\_backends\_asyncio.py", line 2134, in run_sync_in_worker_thread
    return await future
  File "D:\GAISSA\energy-repo\myenv2\lib\site-packages\anyio\_backends\_asyncio.py", line 851, in run
    result = context.run(func, *args)
  File "D:\GAISSA\energy-repo\energy-ml-serving\app\api_code.py", line 47, in wrap
    results = f(request, *args, **kwargs)
  File "D:\GAISSA\energy-repo\energy-ml-serving\app\api_code.py", line 254, in _predict_pythia_410m
    prediction = model.predict(input_text, engine)
  File "D:\GAISSA\energy-repo\energy-ml-serving\app\models_code.py", line 689, in predict
    tokenizer = AutoTokenizer.from_pretrained('models/onnx/pythia-410m')
  File "D:\GAISSA\energy-repo\myenv2\lib\site-packages\transformers\models\auto\tokenization_auto.py", line 737, in from_pretrained
    tokenizer_config = get_tokenizer_config(pretrained_model_name_or_path, **kwargs)
  File "D:\GAISSA\energy-repo\myenv2\lib\site-packages\transformers\models\auto\tokenization_auto.py", line 569, in get_tokenizer_config
    resolved_config_file = cached_file(
  File "D:\GAISSA\energy-repo\myenv2\lib\site-packages\transformers\utils\hub.py", line 454, in cached_file
    raise EnvironmentError(
OSError: Incorrect path_or_model_id: 'models/onnx/pythia-410m'. Please provide either the path to a local folder or the repo_id of a model on the Hub.
INFO:     127.0.0.1:33611 - "GET / HTTP/1.1" 200 OK
INFO:     127.0.0.1:33611 - "GET /docs HTTP/1.1" 200 OK
INFO:     127.0.0.1:33611 - "GET /openapi.json HTTP/1.1" 200 OK
Input text
hello_world
Model: Pythia_410m
Runtime engine: torchscript
INFO:     127.0.0.1:33621 - "POST /huggingface_models/pythia-410m/torchscript HTTP/1.1" 500 Internal Server Error
ERROR:    Exception in ASGI application
Traceback (most recent call last):
  File "D:\GAISSA\energy-repo\myenv2\lib\site-packages\transformers\utils\hub.py", line 389, in cached_file
    resolved_file = hf_hub_download(
  File "D:\GAISSA\energy-repo\myenv2\lib\site-packages\huggingface_hub\utils\_validators.py", line 110, in _inner_fn
    validate_repo_id(arg_value)
  File "D:\GAISSA\energy-repo\myenv2\lib\site-packages\huggingface_hub\utils\_validators.py", line 158, in validate_repo_id
    raise HFValidationError(
huggingface_hub.utils._validators.HFValidationError: Repo id must be in the form 'repo_name' or 'namespace/repo_name': 'models/onnx/pythia-410m'. Use `repo_type` argument if needed.

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "D:\GAISSA\energy-repo\myenv2\lib\site-packages\uvicorn\protocols\http\h11_impl.py", line 408, in run_asgi
    result = await app(  # type: ignore[func-returns-value]
  File "D:\GAISSA\energy-repo\myenv2\lib\site-packages\uvicorn\middleware\proxy_headers.py", line 84, in __call__
    return await self.app(scope, receive, send)
  File "D:\GAISSA\energy-repo\myenv2\lib\site-packages\fastapi\applications.py", line 1054, in __call__
    await super().__call__(scope, receive, send)
  File "D:\GAISSA\energy-repo\myenv2\lib\site-packages\starlette\applications.py", line 123, in __call__
    await self.middleware_stack(scope, receive, send)
  File "D:\GAISSA\energy-repo\myenv2\lib\site-packages\starlette\middleware\errors.py", line 186, in __call__
    raise exc
  File "D:\GAISSA\energy-repo\myenv2\lib\site-packages\starlette\middleware\errors.py", line 164, in __call__
    await self.app(scope, receive, _send)
  File "D:\GAISSA\energy-repo\myenv2\lib\site-packages\starlette\middleware\exceptions.py", line 62, in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
  File "D:\GAISSA\energy-repo\myenv2\lib\site-packages\starlette\_exception_handler.py", line 64, in wrapped_app
    raise exc
  File "D:\GAISSA\energy-repo\myenv2\lib\site-packages\starlette\_exception_handler.py", line 53, in wrapped_app
    await app(scope, receive, sender)
  File "D:\GAISSA\energy-repo\myenv2\lib\site-packages\starlette\routing.py", line 762, in __call__
    await self.middleware_stack(scope, receive, send)
  File "D:\GAISSA\energy-repo\myenv2\lib\site-packages\starlette\routing.py", line 782, in app
    await route.handle(scope, receive, send)
  File "D:\GAISSA\energy-repo\myenv2\lib\site-packages\starlette\routing.py", line 297, in handle
    await self.app(scope, receive, send)
  File "D:\GAISSA\energy-repo\myenv2\lib\site-packages\starlette\routing.py", line 77, in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
  File "D:\GAISSA\energy-repo\myenv2\lib\site-packages\starlette\_exception_handler.py", line 64, in wrapped_app
    raise exc
  File "D:\GAISSA\energy-repo\myenv2\lib\site-packages\starlette\_exception_handler.py", line 53, in wrapped_app
    await app(scope, receive, sender)
  File "D:\GAISSA\energy-repo\myenv2\lib\site-packages\starlette\routing.py", line 72, in app
    response = await func(request)
  File "D:\GAISSA\energy-repo\myenv2\lib\site-packages\fastapi\routing.py", line 299, in app
    raise e
  File "D:\GAISSA\energy-repo\myenv2\lib\site-packages\fastapi\routing.py", line 294, in app
    raw_response = await run_endpoint_function(
  File "D:\GAISSA\energy-repo\myenv2\lib\site-packages\fastapi\routing.py", line 193, in run_endpoint_function
    return await run_in_threadpool(dependant.call, **values)
  File "D:\GAISSA\energy-repo\myenv2\lib\site-packages\starlette\concurrency.py", line 40, in run_in_threadpool
    return await anyio.to_thread.run_sync(func, *args)
  File "D:\GAISSA\energy-repo\myenv2\lib\site-packages\anyio\to_thread.py", line 56, in run_sync
    return await get_async_backend().run_sync_in_worker_thread(
  File "D:\GAISSA\energy-repo\myenv2\lib\site-packages\anyio\_backends\_asyncio.py", line 2134, in run_sync_in_worker_thread
    return await future
  File "D:\GAISSA\energy-repo\myenv2\lib\site-packages\anyio\_backends\_asyncio.py", line 851, in run
    result = context.run(func, *args)
  File "D:\GAISSA\energy-repo\energy-ml-serving\app\api_code.py", line 47, in wrap
    results = f(request, *args, **kwargs)
  File "D:\GAISSA\energy-repo\energy-ml-serving\app\api_code.py", line 254, in _predict_pythia_410m
    prediction = model.predict(input_text, engine)
  File "D:\GAISSA\energy-repo\energy-ml-serving\app\models_code.py", line 689, in predict
    tokenizer = AutoTokenizer.from_pretrained('models/onnx/pythia-410m')
  File "D:\GAISSA\energy-repo\myenv2\lib\site-packages\transformers\models\auto\tokenization_auto.py", line 737, in from_pretrained
    tokenizer_config = get_tokenizer_config(pretrained_model_name_or_path, **kwargs)
  File "D:\GAISSA\energy-repo\myenv2\lib\site-packages\transformers\models\auto\tokenization_auto.py", line 569, in get_tokenizer_config
    resolved_config_file = cached_file(
  File "D:\GAISSA\energy-repo\myenv2\lib\site-packages\transformers\utils\hub.py", line 454, in cached_file
    raise EnvironmentError(
OSError: Incorrect path_or_model_id: 'models/onnx/pythia-410m'. Please provide either the path to a local folder or the repo_id of a model on the Hub.
